---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/person/2?api_key=tmdb_movie_api_key&language=en-US
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 31 Mar 2021 23:27:20 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      X-Memc:
      - HIT
      X-Memc-Key:
      - 001f71cfe2c6c7f5b2336ae595a9c87da99393a9
      X-Memc-Age:
      - '6228'
      X-Memc-Expires:
      - '15372'
      Etag:
      - W/"daa05127ea36443a7be3efead034c9dd"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f83d0d4febf7c22c3236bd42fa6dcd97.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - YVR50-C1
      X-Amz-Cf-Id:
      - wGI4JHK6Pe7rSqdZci72yuxLg1TPaXalt9dZO-0OMHnhIhDvxqVkSQ==
      Age:
      - '6663'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhZHVsdCI6ZmFsc2UsImFsc29fa25vd25fYXMiOlsiTWFyayBIYW1pbCIsIk1hcmsgUmljaGFyZCBIYW1pbGwiLCLQnNCw0YDQuiDQpdGN0LzQuNC70LsiLCLOnM6xz4HOuiDOp86szrzOuc67Iiwi44Oe44O844Kv44O744OP44Of44OrIiwi66eI7YGsIO2VtOuwgCIsIlBhdHJpY2sgV2lsbGlhbXMiLCJXaWxsaWFtIE0uIFBhdHJpY2siXSwiYmlvZ3JhcGh5IjoiTWFyayBSaWNoYXJkIEhhbWlsbCAoYm9ybiBTZXB0ZW1iZXIgMjUsIDE5NTEpIGlzIGFuIEFtZXJpY2FuIGFjdG9yLCB2b2ljZSBhcnRpc3QsIHByb2R1Y2VyLCBkaXJlY3RvciwgYW5kIHdyaXRlci4gSGFtaWxsIGlzIGJlc3Qga25vd24gZm9yIGhpcyByb2xlIGFzIEx1a2UgU2t5d2Fsa2VyIGluIHRoZSBvcmlnaW5hbCBTdGFyIFdhcnMgdHJpbG9neSBhbmQgYWxzbyB3ZWxsIGtub3duIGZvciB2b2ljZS1hY3RpbmcgY2hhcmFjdGVycyBzdWNoIGFzIHRoZSBKb2tlciBpbiB2YXJpb3VzIGFuaW1hdGVkIHNlcmllcywgYW5pbWF0ZWQgZmlsbXMgYW5kIHZpZGVvIGdhbWVzLCBiZWdpbm5pbmcgd2l0aCBCYXRtYW46IFRoZSBBbmltYXRlZCBTZXJpZXMsIHRoZSBTa2VsZXRvbiBraW5nIGluIFN1cGVyIFJvYm90IE1vbmtleSBUZWFtIEh5cGVyZm9yY2UgR28hLCBGaXJlIExvcmQgT3phaSBpbiBBdmF0YXI6IFRoZSBMYXN0IEFpcmJlbmRlciwgTWFzdGVyIEVyYXF1cyBpbiBLaW5nZG9tIEhlYXJ0czogQmlydGggYnkgU2xlZXAsIFNraXBzIGluIFJlZ3VsYXIgU2hvdywgYW5kIFNlbmF0b3IgU3RhbXBpbmd0b24gb24gTWV0YWxvY2FseXBzZS4iLCJiaXJ0aGRheSI6IjE5NTEtMDktMjUiLCJkZWF0aGRheSI6bnVsbCwiZ2VuZGVyIjoyLCJob21lcGFnZSI6bnVsbCwiaWQiOjIsImltZGJfaWQiOiJubTAwMDA0MzQiLCJrbm93bl9mb3JfZGVwYXJ0bWVudCI6IkFjdGluZyIsIm5hbWUiOiJNYXJrIEhhbWlsbCIsInBsYWNlX29mX2JpcnRoIjoiQ29uY29yZCwgQ2FsaWZvcm5pYSwgVVNBIiwicG9wdWxhcml0eSI6MTMuMjIyLCJwcm9maWxlX3BhdGgiOiIvek1ROTNKVExXOEt4dXNLaE9sSEZaaGloM1lRLmpwZyJ9
  recorded_at: Thu, 01 Apr 2021 01:18:23 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/person/2/movie_credits?api_key=tmdb_movie_api_key&language=en-US
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 31 Mar 2021 23:13:47 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      X-Memc:
      - HIT
      X-Memc-Key:
      - 5814e19ce591f684c8d5e8b9ed17e6f7ec75e078
      X-Memc-Age:
      - '12542'
      X-Memc-Expires:
      - '9058'
      Etag:
      - W/"7430c7fff6090f7e64ce7f613b2b7f95"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 d7782b26e589b8e1397d352f4daf0d59.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - YVR50-C1
      X-Amz-Cf-Id:
      - 8QhR5PNTo2byEzuyhSxoyxmiEusEZ2wXUm41AukbgotxkoVaTZBrXw==
      Age:
      - '7477'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 01 Apr 2021 01:18:24 GMT
recorded_with: VCR 6.0.0
